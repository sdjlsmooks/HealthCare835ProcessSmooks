/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_835;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.util.Date;    
import org.milyn.javabean.decoders.DateDecoder;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.io.StringWriter;    
import java.util.List;    
import java.util.ArrayList;    
import org.milyn.edisax.util.EDIUtils;    
import org.milyn.edisax.model.internal.DelimiterType;    
import java.util.Properties;    

public class FinancialInformation implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String transactionHandlingCode;
    private String monetaryAmount;
    private String creditDebitFlag;
    private String paymentMethodCode;
    private String paymentFormatCode;
    private String dfiIDNumberQualifier;
    private String dfiIdentificationNumber;
    private String accountNumberQualifier;
    private String accountNumber;
    private String originatingCompanyID;
    private String originatingCompanyCode;
    private String dfiIDNumberQualifier2;
    private String dfiIdentificationNumber2;
    private String receivingCompanyAccountNumberQualifier;
    private String receivingCompanyAccountNumber;
    private Date date;
    private DateDecoder dateEncoder;

    public FinancialInformation() {
        
        dateEncoder = new DateDecoder();
        Properties dateEncoderProperties = new Properties();
        dateEncoderProperties.setProperty("format", "yyyyMMdd");
        dateEncoder.setConfiguration(dateEncoderProperties);
    }

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = new StringWriter();

        List<String> nodeTokens = new ArrayList<String>();

        if(transactionHandlingCode != null) {
            nodeWriter.write(delimiters.escape(transactionHandlingCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(creditDebitFlag != null) {
            nodeWriter.write(delimiters.escape(creditDebitFlag.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(paymentMethodCode != null) {
            nodeWriter.write(delimiters.escape(paymentMethodCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(paymentFormatCode != null) {
            nodeWriter.write(delimiters.escape(paymentFormatCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(dfiIDNumberQualifier != null) {
            nodeWriter.write(delimiters.escape(dfiIDNumberQualifier.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(dfiIdentificationNumber != null) {
            nodeWriter.write(delimiters.escape(dfiIdentificationNumber.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(accountNumberQualifier != null) {
            nodeWriter.write(delimiters.escape(accountNumberQualifier.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(accountNumber != null) {
            nodeWriter.write(delimiters.escape(accountNumber.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(originatingCompanyID != null) {
            nodeWriter.write(delimiters.escape(originatingCompanyID.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(originatingCompanyCode != null) {
            nodeWriter.write(delimiters.escape(originatingCompanyCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(dfiIDNumberQualifier2 != null) {
            nodeWriter.write(delimiters.escape(dfiIDNumberQualifier2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(dfiIdentificationNumber2 != null) {
            nodeWriter.write(delimiters.escape(dfiIdentificationNumber2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(receivingCompanyAccountNumberQualifier != null) {
            nodeWriter.write(delimiters.escape(receivingCompanyAccountNumberQualifier.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(receivingCompanyAccountNumber != null) {
            nodeWriter.write(delimiters.escape(receivingCompanyAccountNumber.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(date != null) {
            nodeWriter.write(delimiters.escape(dateEncoder.encode(date)));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeTokens.add(nodeWriter.toString());
        writer.write(EDIUtils.concatAndTruncate(nodeTokens, DelimiterType.FIELD, delimiters));
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getTransactionHandlingCode() {
        return transactionHandlingCode;
    }

    public FinancialInformation setTransactionHandlingCode(String transactionHandlingCode) {
        this.transactionHandlingCode = transactionHandlingCode;  return this;
    }

    public String getMonetaryAmount() {
        return monetaryAmount;
    }

    public FinancialInformation setMonetaryAmount(String monetaryAmount) {
        this.monetaryAmount = monetaryAmount;  return this;
    }

    public String getCreditDebitFlag() {
        return creditDebitFlag;
    }

    public FinancialInformation setCreditDebitFlag(String creditDebitFlag) {
        this.creditDebitFlag = creditDebitFlag;  return this;
    }

    public String getPaymentMethodCode() {
        return paymentMethodCode;
    }

    public FinancialInformation setPaymentMethodCode(String paymentMethodCode) {
        this.paymentMethodCode = paymentMethodCode;  return this;
    }

    public String getPaymentFormatCode() {
        return paymentFormatCode;
    }

    public FinancialInformation setPaymentFormatCode(String paymentFormatCode) {
        this.paymentFormatCode = paymentFormatCode;  return this;
    }

    public String getDfiIDNumberQualifier() {
        return dfiIDNumberQualifier;
    }

    public FinancialInformation setDfiIDNumberQualifier(String dfiIDNumberQualifier) {
        this.dfiIDNumberQualifier = dfiIDNumberQualifier;  return this;
    }

    public String getDfiIdentificationNumber() {
        return dfiIdentificationNumber;
    }

    public FinancialInformation setDfiIdentificationNumber(String dfiIdentificationNumber) {
        this.dfiIdentificationNumber = dfiIdentificationNumber;  return this;
    }

    public String getAccountNumberQualifier() {
        return accountNumberQualifier;
    }

    public FinancialInformation setAccountNumberQualifier(String accountNumberQualifier) {
        this.accountNumberQualifier = accountNumberQualifier;  return this;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public FinancialInformation setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;  return this;
    }

    public String getOriginatingCompanyID() {
        return originatingCompanyID;
    }

    public FinancialInformation setOriginatingCompanyID(String originatingCompanyID) {
        this.originatingCompanyID = originatingCompanyID;  return this;
    }

    public String getOriginatingCompanyCode() {
        return originatingCompanyCode;
    }

    public FinancialInformation setOriginatingCompanyCode(String originatingCompanyCode) {
        this.originatingCompanyCode = originatingCompanyCode;  return this;
    }

    public String getDfiIDNumberQualifier2() {
        return dfiIDNumberQualifier2;
    }

    public FinancialInformation setDfiIDNumberQualifier2(String dfiIDNumberQualifier2) {
        this.dfiIDNumberQualifier2 = dfiIDNumberQualifier2;  return this;
    }

    public String getDfiIdentificationNumber2() {
        return dfiIdentificationNumber2;
    }

    public FinancialInformation setDfiIdentificationNumber2(String dfiIdentificationNumber2) {
        this.dfiIdentificationNumber2 = dfiIdentificationNumber2;  return this;
    }

    public String getReceivingCompanyAccountNumberQualifier() {
        return receivingCompanyAccountNumberQualifier;
    }

    public FinancialInformation setReceivingCompanyAccountNumberQualifier(String receivingCompanyAccountNumberQualifier) {
        this.receivingCompanyAccountNumberQualifier = receivingCompanyAccountNumberQualifier;  return this;
    }

    public String getReceivingCompanyAccountNumber() {
        return receivingCompanyAccountNumber;
    }

    public FinancialInformation setReceivingCompanyAccountNumber(String receivingCompanyAccountNumber) {
        this.receivingCompanyAccountNumber = receivingCompanyAccountNumber;  return this;
    }

    public Date getDate() {
        return date;
    }

    public FinancialInformation setDate(Date date) {
        this.date = date;  return this;
    }
}