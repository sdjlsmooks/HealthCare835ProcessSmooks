/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_835;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.io.StringWriter;    
import java.util.List;    
import java.util.ArrayList;    
import org.milyn.edisax.util.EDIUtils;    
import org.milyn.edisax.model.internal.DelimiterType;    

public class ReAssociationTraceNumber implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String traceTypeCode;
    private String referenceIdentification;
    private String originatingCompanyIdentifier;
    private String referenceIdentification2;

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = new StringWriter();

        List<String> nodeTokens = new ArrayList<String>();

        if(traceTypeCode != null) {
            nodeWriter.write(delimiters.escape(traceTypeCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(referenceIdentification != null) {
            nodeWriter.write(delimiters.escape(referenceIdentification.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(originatingCompanyIdentifier != null) {
            nodeWriter.write(delimiters.escape(originatingCompanyIdentifier.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(referenceIdentification2 != null) {
            nodeWriter.write(delimiters.escape(referenceIdentification2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeTokens.add(nodeWriter.toString());
        writer.write(EDIUtils.concatAndTruncate(nodeTokens, DelimiterType.FIELD, delimiters));
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getTraceTypeCode() {
        return traceTypeCode;
    }

    public ReAssociationTraceNumber setTraceTypeCode(String traceTypeCode) {
        this.traceTypeCode = traceTypeCode;  return this;
    }

    public String getReferenceIdentification() {
        return referenceIdentification;
    }

    public ReAssociationTraceNumber setReferenceIdentification(String referenceIdentification) {
        this.referenceIdentification = referenceIdentification;  return this;
    }

    public String getOriginatingCompanyIdentifier() {
        return originatingCompanyIdentifier;
    }

    public ReAssociationTraceNumber setOriginatingCompanyIdentifier(String originatingCompanyIdentifier) {
        this.originatingCompanyIdentifier = originatingCompanyIdentifier;  return this;
    }

    public String getReferenceIdentification2() {
        return referenceIdentification2;
    }

    public ReAssociationTraceNumber setReferenceIdentification2(String referenceIdentification2) {
        this.referenceIdentification2 = referenceIdentification2;  return this;
    }
}