/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_835;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.util.List;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    

public class Loop1000BPayeeIdentification implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private PayeeIdentification payeeIdentification;
    private PayeeAddress payeeAddress;
    private PayeeCityStateZipCode payeeCityStateZipCode;
    private List<PayeeAdditionalIdentification> payeeAdditionalIdentification;
    private RemittanceDeliveryMethod remittanceDeliveryMethod;

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = writer;

        if(payeeIdentification != null) {
            nodeWriter.write("N1");
            nodeWriter.write(delimiters.getField());
            payeeIdentification.write(nodeWriter, delimiters);
        }
        if(payeeAddress != null) {
            nodeWriter.write("N3");
            nodeWriter.write(delimiters.getField());
            payeeAddress.write(nodeWriter, delimiters);
        }
        if(payeeCityStateZipCode != null) {
            nodeWriter.write("N4");
            nodeWriter.write(delimiters.getField());
            payeeCityStateZipCode.write(nodeWriter, delimiters);
        }
        if(payeeAdditionalIdentification != null && !payeeAdditionalIdentification.isEmpty()) {
            for(PayeeAdditionalIdentification payeeAdditionalIdentificationInst : payeeAdditionalIdentification) {
                nodeWriter.write("REF");
                nodeWriter.write(delimiters.getField());
                payeeAdditionalIdentificationInst.write(nodeWriter, delimiters);
            }
        }
        if(remittanceDeliveryMethod != null) {
            nodeWriter.write("RDM");
            nodeWriter.write(delimiters.getField());
            remittanceDeliveryMethod.write(nodeWriter, delimiters);
        }
    }

    public PayeeIdentification getPayeeIdentification() {
        return payeeIdentification;
    }

    public Loop1000BPayeeIdentification setPayeeIdentification(PayeeIdentification payeeIdentification) {
        this.payeeIdentification = payeeIdentification;  return this;
    }

    public PayeeAddress getPayeeAddress() {
        return payeeAddress;
    }

    public Loop1000BPayeeIdentification setPayeeAddress(PayeeAddress payeeAddress) {
        this.payeeAddress = payeeAddress;  return this;
    }

    public PayeeCityStateZipCode getPayeeCityStateZipCode() {
        return payeeCityStateZipCode;
    }

    public Loop1000BPayeeIdentification setPayeeCityStateZipCode(PayeeCityStateZipCode payeeCityStateZipCode) {
        this.payeeCityStateZipCode = payeeCityStateZipCode;  return this;
    }

    public List<PayeeAdditionalIdentification> getPayeeAdditionalIdentification() {
        return payeeAdditionalIdentification;
    }

    public Loop1000BPayeeIdentification setPayeeAdditionalIdentification(List<PayeeAdditionalIdentification> payeeAdditionalIdentification) {
        this.payeeAdditionalIdentification = payeeAdditionalIdentification;  return this;
    }

    public RemittanceDeliveryMethod getRemittanceDeliveryMethod() {
        return remittanceDeliveryMethod;
    }

    public Loop1000BPayeeIdentification setRemittanceDeliveryMethod(RemittanceDeliveryMethod remittanceDeliveryMethod) {
        this.remittanceDeliveryMethod = remittanceDeliveryMethod;  return this;
    }
}