/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_835;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.util.List;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    

public class TransactionSet implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private TransactionSetHeader transactionSetHeader;
    private FinancialInformation financialInformation;
    private ReAssociationTraceNumber reAssociationTraceNumber;
    private ForeignCurrencyInformation foreignCurrencyInformation;
    private ReceiverIdentification receiverIdentification;
    private VersionIdentification versionIdentification;
    private ProductionDate productionDate;
    private Loop1000APayerIdentification loop1000APayerIdentification;
    private Loop1000BPayeeIdentification loop1000BPayeeIdentification;
    private List<Loop2000Detail> loop2000Detail;
    private List<ProviderAdjustment> providerAdjustment;
    private TransactionSetTrailer transactionSetTrailer;

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = writer;

        if(transactionSetHeader != null) {
            nodeWriter.write("ST");
            nodeWriter.write(delimiters.getField());
            transactionSetHeader.write(nodeWriter, delimiters);
        }
        if(financialInformation != null) {
            nodeWriter.write("BPR");
            nodeWriter.write(delimiters.getField());
            financialInformation.write(nodeWriter, delimiters);
        }
        if(reAssociationTraceNumber != null) {
            nodeWriter.write("TRN");
            nodeWriter.write(delimiters.getField());
            reAssociationTraceNumber.write(nodeWriter, delimiters);
        }
        if(foreignCurrencyInformation != null) {
            nodeWriter.write("CUR");
            nodeWriter.write(delimiters.getField());
            foreignCurrencyInformation.write(nodeWriter, delimiters);
        }
        if(receiverIdentification != null) {
            nodeWriter.write("REF");
            nodeWriter.write(delimiters.getField());
            receiverIdentification.write(nodeWriter, delimiters);
        }
        if(versionIdentification != null) {
            nodeWriter.write("REF");
            nodeWriter.write(delimiters.getField());
            versionIdentification.write(nodeWriter, delimiters);
        }
        if(productionDate != null) {
            nodeWriter.write("DTM");
            nodeWriter.write(delimiters.getField());
            productionDate.write(nodeWriter, delimiters);
        }
        if(loop1000APayerIdentification != null) {
            loop1000APayerIdentification.write(nodeWriter, delimiters);
        }
        if(loop1000BPayeeIdentification != null) {
            loop1000BPayeeIdentification.write(nodeWriter, delimiters);
        }
        if(loop2000Detail != null && !loop2000Detail.isEmpty()) {
            for(Loop2000Detail loop2000DetailInst : loop2000Detail) {
                loop2000DetailInst.write(nodeWriter, delimiters);
            }
        }
        if(providerAdjustment != null && !providerAdjustment.isEmpty()) {
            for(ProviderAdjustment providerAdjustmentInst : providerAdjustment) {
                nodeWriter.write("PLB");
                nodeWriter.write(delimiters.getField());
                providerAdjustmentInst.write(nodeWriter, delimiters);
            }
        }
        if(transactionSetTrailer != null) {
            nodeWriter.write("SE");
            nodeWriter.write(delimiters.getField());
            transactionSetTrailer.write(nodeWriter, delimiters);
        }
    }

    public TransactionSetHeader getTransactionSetHeader() {
        return transactionSetHeader;
    }

    public TransactionSet setTransactionSetHeader(TransactionSetHeader transactionSetHeader) {
        this.transactionSetHeader = transactionSetHeader;  return this;
    }

    public FinancialInformation getFinancialInformation() {
        return financialInformation;
    }

    public TransactionSet setFinancialInformation(FinancialInformation financialInformation) {
        this.financialInformation = financialInformation;  return this;
    }

    public ReAssociationTraceNumber getReAssociationTraceNumber() {
        return reAssociationTraceNumber;
    }

    public TransactionSet setReAssociationTraceNumber(ReAssociationTraceNumber reAssociationTraceNumber) {
        this.reAssociationTraceNumber = reAssociationTraceNumber;  return this;
    }

    public ForeignCurrencyInformation getForeignCurrencyInformation() {
        return foreignCurrencyInformation;
    }

    public TransactionSet setForeignCurrencyInformation(ForeignCurrencyInformation foreignCurrencyInformation) {
        this.foreignCurrencyInformation = foreignCurrencyInformation;  return this;
    }

    public ReceiverIdentification getReceiverIdentification() {
        return receiverIdentification;
    }

    public TransactionSet setReceiverIdentification(ReceiverIdentification receiverIdentification) {
        this.receiverIdentification = receiverIdentification;  return this;
    }

    public VersionIdentification getVersionIdentification() {
        return versionIdentification;
    }

    public TransactionSet setVersionIdentification(VersionIdentification versionIdentification) {
        this.versionIdentification = versionIdentification;  return this;
    }

    public ProductionDate getProductionDate() {
        return productionDate;
    }

    public TransactionSet setProductionDate(ProductionDate productionDate) {
        this.productionDate = productionDate;  return this;
    }

    public Loop1000APayerIdentification getLoop1000APayerIdentification() {
        return loop1000APayerIdentification;
    }

    public TransactionSet setLoop1000APayerIdentification(Loop1000APayerIdentification loop1000APayerIdentification) {
        this.loop1000APayerIdentification = loop1000APayerIdentification;  return this;
    }

    public Loop1000BPayeeIdentification getLoop1000BPayeeIdentification() {
        return loop1000BPayeeIdentification;
    }

    public TransactionSet setLoop1000BPayeeIdentification(Loop1000BPayeeIdentification loop1000BPayeeIdentification) {
        this.loop1000BPayeeIdentification = loop1000BPayeeIdentification;  return this;
    }

    public List<Loop2000Detail> getLoop2000Detail() {
        return loop2000Detail;
    }

    public TransactionSet setLoop2000Detail(List<Loop2000Detail> loop2000Detail) {
        this.loop2000Detail = loop2000Detail;  return this;
    }

    public List<ProviderAdjustment> getProviderAdjustment() {
        return providerAdjustment;
    }

    public TransactionSet setProviderAdjustment(List<ProviderAdjustment> providerAdjustment) {
        this.providerAdjustment = providerAdjustment;  return this;
    }

    public TransactionSetTrailer getTransactionSetTrailer() {
        return transactionSetTrailer;
    }

    public TransactionSet setTransactionSetTrailer(TransactionSetTrailer transactionSetTrailer) {
        this.transactionSetTrailer = transactionSetTrailer;  return this;
    }
}