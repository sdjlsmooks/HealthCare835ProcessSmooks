/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_835;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import org.milyn.javabean.decoders.IntegerDecoder;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.io.StringWriter;    
import java.util.List;    
import java.util.ArrayList;    
import org.milyn.edisax.util.EDIUtils;    
import org.milyn.edisax.model.internal.DelimiterType;    

public class ClaimPaymentInformation implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String claimSubmitIdentifierWithFacility;
    private String claimStatusCode;
    private String monetaryAmount;
    private String monetaryAmount2;
    private String monetaryAmount3;
    private String claimFileIndicatorCode;
    private String referenceIdentification;
    private String facilityCode;
    private String claimFrequencyTypeCode;
    private String drgCode;
    private Integer quantity;
    private IntegerDecoder quantityEncoder;
    private String percent;

    public ClaimPaymentInformation() {
        
        quantityEncoder = new IntegerDecoder();
    }

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = new StringWriter();

        List<String> nodeTokens = new ArrayList<String>();

        if(claimSubmitIdentifierWithFacility != null) {
            nodeWriter.write(delimiters.escape(claimSubmitIdentifierWithFacility.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(claimStatusCode != null) {
            nodeWriter.write(delimiters.escape(claimStatusCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount2 != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount3 != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount3.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(claimFileIndicatorCode != null) {
            nodeWriter.write(delimiters.escape(claimFileIndicatorCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(referenceIdentification != null) {
            nodeWriter.write(delimiters.escape(referenceIdentification.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(facilityCode != null) {
            nodeWriter.write(delimiters.escape(facilityCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(claimFrequencyTypeCode != null) {
            nodeWriter.write(delimiters.escape(claimFrequencyTypeCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(drgCode != null) {
            nodeWriter.write(delimiters.escape(drgCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(quantity != null) {
            nodeWriter.write(delimiters.escape(quantityEncoder.encode(quantity)));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(percent != null) {
            nodeWriter.write(delimiters.escape(percent.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeTokens.add(nodeWriter.toString());
        writer.write(EDIUtils.concatAndTruncate(nodeTokens, DelimiterType.FIELD, delimiters));
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getClaimSubmitIdentifierWithFacility() {
        return claimSubmitIdentifierWithFacility;
    }

    public ClaimPaymentInformation setClaimSubmitIdentifierWithFacility(String claimSubmitIdentifierWithFacility) {
        this.claimSubmitIdentifierWithFacility = claimSubmitIdentifierWithFacility;  return this;
    }

    public String getClaimStatusCode() {
        return claimStatusCode;
    }

    public ClaimPaymentInformation setClaimStatusCode(String claimStatusCode) {
        this.claimStatusCode = claimStatusCode;  return this;
    }

    public String getMonetaryAmount() {
        return monetaryAmount;
    }

    public ClaimPaymentInformation setMonetaryAmount(String monetaryAmount) {
        this.monetaryAmount = monetaryAmount;  return this;
    }

    public String getMonetaryAmount2() {
        return monetaryAmount2;
    }

    public ClaimPaymentInformation setMonetaryAmount2(String monetaryAmount2) {
        this.monetaryAmount2 = monetaryAmount2;  return this;
    }

    public String getMonetaryAmount3() {
        return monetaryAmount3;
    }

    public ClaimPaymentInformation setMonetaryAmount3(String monetaryAmount3) {
        this.monetaryAmount3 = monetaryAmount3;  return this;
    }

    public String getClaimFileIndicatorCode() {
        return claimFileIndicatorCode;
    }

    public ClaimPaymentInformation setClaimFileIndicatorCode(String claimFileIndicatorCode) {
        this.claimFileIndicatorCode = claimFileIndicatorCode;  return this;
    }

    public String getReferenceIdentification() {
        return referenceIdentification;
    }

    public ClaimPaymentInformation setReferenceIdentification(String referenceIdentification) {
        this.referenceIdentification = referenceIdentification;  return this;
    }

    public String getFacilityCode() {
        return facilityCode;
    }

    public ClaimPaymentInformation setFacilityCode(String facilityCode) {
        this.facilityCode = facilityCode;  return this;
    }

    public String getClaimFrequencyTypeCode() {
        return claimFrequencyTypeCode;
    }

    public ClaimPaymentInformation setClaimFrequencyTypeCode(String claimFrequencyTypeCode) {
        this.claimFrequencyTypeCode = claimFrequencyTypeCode;  return this;
    }

    public String getDrgCode() {
        return drgCode;
    }

    public ClaimPaymentInformation setDrgCode(String drgCode) {
        this.drgCode = drgCode;  return this;
    }

    public Integer getQuantity() {
        return quantity;
    }

    public ClaimPaymentInformation setQuantity(Integer quantity) {
        this.quantity = quantity;  return this;
    }

    public String getPercent() {
        return percent;
    }

    public ClaimPaymentInformation setPercent(String percent) {
        this.percent = percent;  return this;
    }
}