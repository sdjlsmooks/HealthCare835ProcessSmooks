/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_837;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.io.StringWriter;    
import java.util.List;    
import java.util.ArrayList;    
import org.milyn.edisax.util.EDIUtils;    
import org.milyn.edisax.model.internal.DelimiterType;    

public class ClaimPriceRepriceInfo implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String pricingMethodology;
    private String allowedAmount;
    private String savingsAmount;
    private String referenceIdentifer;
    private String rate;
    private String referenceIdentifier2;
    private String approvedDGRAmount;
    private String productServiceID;
    private String productServiceIDQualifier;
    private String productServiceID2;
    private String unitBasisOfMeasureCode;
    private String quantity;
    private String rejectReasonCode;
    private String policyCompCode;
    private String exceptionCode;

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = new StringWriter();

        List<String> nodeTokens = new ArrayList<String>();

        if(pricingMethodology != null) {
            nodeWriter.write(delimiters.escape(pricingMethodology.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(allowedAmount != null) {
            nodeWriter.write(delimiters.escape(allowedAmount.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(savingsAmount != null) {
            nodeWriter.write(delimiters.escape(savingsAmount.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(referenceIdentifer != null) {
            nodeWriter.write(delimiters.escape(referenceIdentifer.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(rate != null) {
            nodeWriter.write(delimiters.escape(rate.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(referenceIdentifier2 != null) {
            nodeWriter.write(delimiters.escape(referenceIdentifier2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(approvedDGRAmount != null) {
            nodeWriter.write(delimiters.escape(approvedDGRAmount.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(productServiceID != null) {
            nodeWriter.write(delimiters.escape(productServiceID.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(productServiceIDQualifier != null) {
            nodeWriter.write(delimiters.escape(productServiceIDQualifier.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(productServiceID2 != null) {
            nodeWriter.write(delimiters.escape(productServiceID2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(unitBasisOfMeasureCode != null) {
            nodeWriter.write(delimiters.escape(unitBasisOfMeasureCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(quantity != null) {
            nodeWriter.write(delimiters.escape(quantity.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(rejectReasonCode != null) {
            nodeWriter.write(delimiters.escape(rejectReasonCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(policyCompCode != null) {
            nodeWriter.write(delimiters.escape(policyCompCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(exceptionCode != null) {
            nodeWriter.write(delimiters.escape(exceptionCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeTokens.add(nodeWriter.toString());
        writer.write(EDIUtils.concatAndTruncate(nodeTokens, DelimiterType.FIELD, delimiters));
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getPricingMethodology() {
        return pricingMethodology;
    }

    public ClaimPriceRepriceInfo setPricingMethodology(String pricingMethodology) {
        this.pricingMethodology = pricingMethodology;  return this;
    }

    public String getAllowedAmount() {
        return allowedAmount;
    }

    public ClaimPriceRepriceInfo setAllowedAmount(String allowedAmount) {
        this.allowedAmount = allowedAmount;  return this;
    }

    public String getSavingsAmount() {
        return savingsAmount;
    }

    public ClaimPriceRepriceInfo setSavingsAmount(String savingsAmount) {
        this.savingsAmount = savingsAmount;  return this;
    }

    public String getReferenceIdentifer() {
        return referenceIdentifer;
    }

    public ClaimPriceRepriceInfo setReferenceIdentifer(String referenceIdentifer) {
        this.referenceIdentifer = referenceIdentifer;  return this;
    }

    public String getRate() {
        return rate;
    }

    public ClaimPriceRepriceInfo setRate(String rate) {
        this.rate = rate;  return this;
    }

    public String getReferenceIdentifier2() {
        return referenceIdentifier2;
    }

    public ClaimPriceRepriceInfo setReferenceIdentifier2(String referenceIdentifier2) {
        this.referenceIdentifier2 = referenceIdentifier2;  return this;
    }

    public String getApprovedDGRAmount() {
        return approvedDGRAmount;
    }

    public ClaimPriceRepriceInfo setApprovedDGRAmount(String approvedDGRAmount) {
        this.approvedDGRAmount = approvedDGRAmount;  return this;
    }

    public String getProductServiceID() {
        return productServiceID;
    }

    public ClaimPriceRepriceInfo setProductServiceID(String productServiceID) {
        this.productServiceID = productServiceID;  return this;
    }

    public String getProductServiceIDQualifier() {
        return productServiceIDQualifier;
    }

    public ClaimPriceRepriceInfo setProductServiceIDQualifier(String productServiceIDQualifier) {
        this.productServiceIDQualifier = productServiceIDQualifier;  return this;
    }

    public String getProductServiceID2() {
        return productServiceID2;
    }

    public ClaimPriceRepriceInfo setProductServiceID2(String productServiceID2) {
        this.productServiceID2 = productServiceID2;  return this;
    }

    public String getUnitBasisOfMeasureCode() {
        return unitBasisOfMeasureCode;
    }

    public ClaimPriceRepriceInfo setUnitBasisOfMeasureCode(String unitBasisOfMeasureCode) {
        this.unitBasisOfMeasureCode = unitBasisOfMeasureCode;  return this;
    }

    public String getQuantity() {
        return quantity;
    }

    public ClaimPriceRepriceInfo setQuantity(String quantity) {
        this.quantity = quantity;  return this;
    }

    public String getRejectReasonCode() {
        return rejectReasonCode;
    }

    public ClaimPriceRepriceInfo setRejectReasonCode(String rejectReasonCode) {
        this.rejectReasonCode = rejectReasonCode;  return this;
    }

    public String getPolicyCompCode() {
        return policyCompCode;
    }

    public ClaimPriceRepriceInfo setPolicyCompCode(String policyCompCode) {
        this.policyCompCode = policyCompCode;  return this;
    }

    public String getExceptionCode() {
        return exceptionCode;
    }

    public ClaimPriceRepriceInfo setExceptionCode(String exceptionCode) {
        this.exceptionCode = exceptionCode;  return this;
    }
}