/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_837;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.io.StringWriter;    
import java.util.List;    
import java.util.ArrayList;    
import org.milyn.edisax.util.EDIUtils;    
import org.milyn.edisax.model.internal.DelimiterType;    

public class OtherInsuranceCoverageInfo implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String claimFileIndCode;
    private String claimSubmitReasonCode;
    private String yesNoCondResponseCode;
    private String patientSigSourceCode;
    private String providerAgreeCode;
    private String releaseOfInfoCode;

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = new StringWriter();

        List<String> nodeTokens = new ArrayList<String>();

        if(claimFileIndCode != null) {
            nodeWriter.write(delimiters.escape(claimFileIndCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(claimSubmitReasonCode != null) {
            nodeWriter.write(delimiters.escape(claimSubmitReasonCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(yesNoCondResponseCode != null) {
            nodeWriter.write(delimiters.escape(yesNoCondResponseCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(patientSigSourceCode != null) {
            nodeWriter.write(delimiters.escape(patientSigSourceCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(providerAgreeCode != null) {
            nodeWriter.write(delimiters.escape(providerAgreeCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(releaseOfInfoCode != null) {
            nodeWriter.write(delimiters.escape(releaseOfInfoCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeTokens.add(nodeWriter.toString());
        writer.write(EDIUtils.concatAndTruncate(nodeTokens, DelimiterType.FIELD, delimiters));
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getClaimFileIndCode() {
        return claimFileIndCode;
    }

    public OtherInsuranceCoverageInfo setClaimFileIndCode(String claimFileIndCode) {
        this.claimFileIndCode = claimFileIndCode;  return this;
    }

    public String getClaimSubmitReasonCode() {
        return claimSubmitReasonCode;
    }

    public OtherInsuranceCoverageInfo setClaimSubmitReasonCode(String claimSubmitReasonCode) {
        this.claimSubmitReasonCode = claimSubmitReasonCode;  return this;
    }

    public String getYesNoCondResponseCode() {
        return yesNoCondResponseCode;
    }

    public OtherInsuranceCoverageInfo setYesNoCondResponseCode(String yesNoCondResponseCode) {
        this.yesNoCondResponseCode = yesNoCondResponseCode;  return this;
    }

    public String getPatientSigSourceCode() {
        return patientSigSourceCode;
    }

    public OtherInsuranceCoverageInfo setPatientSigSourceCode(String patientSigSourceCode) {
        this.patientSigSourceCode = patientSigSourceCode;  return this;
    }

    public String getProviderAgreeCode() {
        return providerAgreeCode;
    }

    public OtherInsuranceCoverageInfo setProviderAgreeCode(String providerAgreeCode) {
        this.providerAgreeCode = providerAgreeCode;  return this;
    }

    public String getReleaseOfInfoCode() {
        return releaseOfInfoCode;
    }

    public OtherInsuranceCoverageInfo setReleaseOfInfoCode(String releaseOfInfoCode) {
        this.releaseOfInfoCode = releaseOfInfoCode;  return this;
    }
}