/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_837;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import org.milyn.javabean.decoders.DoubleDecoder;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.io.StringWriter;    
import java.util.List;    
import java.util.ArrayList;    
import org.milyn.edisax.util.EDIUtils;    
import org.milyn.edisax.model.internal.DelimiterType;    

public class DurableMedicalEquipmentService implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String compMedProcedID;
    private String unitBasisMeasCode;
    private Double quantity;
    private DoubleDecoder quantityEncoder;
    private String monetaryAmount1;
    private String monetaryAmount2;
    private String frequencyCode;
    private String prognosisCode;

    public DurableMedicalEquipmentService() {
        
        quantityEncoder = new DoubleDecoder();
    }

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = new StringWriter();

        List<String> nodeTokens = new ArrayList<String>();

        if(compMedProcedID != null) {
            nodeWriter.write(delimiters.escape(compMedProcedID.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(unitBasisMeasCode != null) {
            nodeWriter.write(delimiters.escape(unitBasisMeasCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(quantity != null) {
            nodeWriter.write(delimiters.escape(quantityEncoder.encode(quantity)));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount1 != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount1.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount2 != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(frequencyCode != null) {
            nodeWriter.write(delimiters.escape(frequencyCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(prognosisCode != null) {
            nodeWriter.write(delimiters.escape(prognosisCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeTokens.add(nodeWriter.toString());
        writer.write(EDIUtils.concatAndTruncate(nodeTokens, DelimiterType.FIELD, delimiters));
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getCompMedProcedID() {
        return compMedProcedID;
    }

    public DurableMedicalEquipmentService setCompMedProcedID(String compMedProcedID) {
        this.compMedProcedID = compMedProcedID;  return this;
    }

    public String getUnitBasisMeasCode() {
        return unitBasisMeasCode;
    }

    public DurableMedicalEquipmentService setUnitBasisMeasCode(String unitBasisMeasCode) {
        this.unitBasisMeasCode = unitBasisMeasCode;  return this;
    }

    public Double getQuantity() {
        return quantity;
    }

    public DurableMedicalEquipmentService setQuantity(Double quantity) {
        this.quantity = quantity;  return this;
    }

    public String getMonetaryAmount1() {
        return monetaryAmount1;
    }

    public DurableMedicalEquipmentService setMonetaryAmount1(String monetaryAmount1) {
        this.monetaryAmount1 = monetaryAmount1;  return this;
    }

    public String getMonetaryAmount2() {
        return monetaryAmount2;
    }

    public DurableMedicalEquipmentService setMonetaryAmount2(String monetaryAmount2) {
        this.monetaryAmount2 = monetaryAmount2;  return this;
    }

    public String getFrequencyCode() {
        return frequencyCode;
    }

    public DurableMedicalEquipmentService setFrequencyCode(String frequencyCode) {
        this.frequencyCode = frequencyCode;  return this;
    }

    public String getPrognosisCode() {
        return prognosisCode;
    }

    public DurableMedicalEquipmentService setPrognosisCode(String prognosisCode) {
        this.prognosisCode = prognosisCode;  return this;
    }
}