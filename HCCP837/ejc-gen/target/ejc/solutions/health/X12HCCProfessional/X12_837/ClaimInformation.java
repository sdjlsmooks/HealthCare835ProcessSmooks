/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_837;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.io.StringWriter;    
import java.util.List;    
import java.util.ArrayList;    
import org.milyn.edisax.util.EDIUtils;    
import org.milyn.edisax.model.internal.DelimiterType;    

public class ClaimInformation implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String claimSubmitterIdentifier;
    private String monetaryAmount;
    private String claimFileIndCode;
    private String nonInstClaimCode;
    private String healthCareServLoc;
    private String yesNoCondRespCode;
    private String providerAcceptCode;
    private String yesNoCondRespCode2;
    private String releaseOfInfoCode;
    private String patientSigSourceCode;
    private String relatedCausesInfo;
    private String specialProgCode;
    private String yesNoCondRespCode3;
    private String levelOfServiceCode;
    private String yesNoCondRespCode4;
    private String providerAgreeCode;
    private String claimStatusCode;
    private String yesNoCondRespCode5;
    private String claimSubmitReasonCode;
    private String delayReasonCode;

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = new StringWriter();

        List<String> nodeTokens = new ArrayList<String>();

        if(claimSubmitterIdentifier != null) {
            nodeWriter.write(delimiters.escape(claimSubmitterIdentifier.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(claimFileIndCode != null) {
            nodeWriter.write(delimiters.escape(claimFileIndCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(nonInstClaimCode != null) {
            nodeWriter.write(delimiters.escape(nonInstClaimCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(healthCareServLoc != null) {
            nodeWriter.write(delimiters.escape(healthCareServLoc.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(yesNoCondRespCode != null) {
            nodeWriter.write(delimiters.escape(yesNoCondRespCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(providerAcceptCode != null) {
            nodeWriter.write(delimiters.escape(providerAcceptCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(yesNoCondRespCode2 != null) {
            nodeWriter.write(delimiters.escape(yesNoCondRespCode2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(releaseOfInfoCode != null) {
            nodeWriter.write(delimiters.escape(releaseOfInfoCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(patientSigSourceCode != null) {
            nodeWriter.write(delimiters.escape(patientSigSourceCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(relatedCausesInfo != null) {
            nodeWriter.write(delimiters.escape(relatedCausesInfo.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(specialProgCode != null) {
            nodeWriter.write(delimiters.escape(specialProgCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(yesNoCondRespCode3 != null) {
            nodeWriter.write(delimiters.escape(yesNoCondRespCode3.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(levelOfServiceCode != null) {
            nodeWriter.write(delimiters.escape(levelOfServiceCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(yesNoCondRespCode4 != null) {
            nodeWriter.write(delimiters.escape(yesNoCondRespCode4.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(providerAgreeCode != null) {
            nodeWriter.write(delimiters.escape(providerAgreeCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(claimStatusCode != null) {
            nodeWriter.write(delimiters.escape(claimStatusCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(yesNoCondRespCode5 != null) {
            nodeWriter.write(delimiters.escape(yesNoCondRespCode5.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(claimSubmitReasonCode != null) {
            nodeWriter.write(delimiters.escape(claimSubmitReasonCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(delayReasonCode != null) {
            nodeWriter.write(delimiters.escape(delayReasonCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeTokens.add(nodeWriter.toString());
        writer.write(EDIUtils.concatAndTruncate(nodeTokens, DelimiterType.FIELD, delimiters));
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getClaimSubmitterIdentifier() {
        return claimSubmitterIdentifier;
    }

    public ClaimInformation setClaimSubmitterIdentifier(String claimSubmitterIdentifier) {
        this.claimSubmitterIdentifier = claimSubmitterIdentifier;  return this;
    }

    public String getMonetaryAmount() {
        return monetaryAmount;
    }

    public ClaimInformation setMonetaryAmount(String monetaryAmount) {
        this.monetaryAmount = monetaryAmount;  return this;
    }

    public String getClaimFileIndCode() {
        return claimFileIndCode;
    }

    public ClaimInformation setClaimFileIndCode(String claimFileIndCode) {
        this.claimFileIndCode = claimFileIndCode;  return this;
    }

    public String getNonInstClaimCode() {
        return nonInstClaimCode;
    }

    public ClaimInformation setNonInstClaimCode(String nonInstClaimCode) {
        this.nonInstClaimCode = nonInstClaimCode;  return this;
    }

    public String getHealthCareServLoc() {
        return healthCareServLoc;
    }

    public ClaimInformation setHealthCareServLoc(String healthCareServLoc) {
        this.healthCareServLoc = healthCareServLoc;  return this;
    }

    public String getYesNoCondRespCode() {
        return yesNoCondRespCode;
    }

    public ClaimInformation setYesNoCondRespCode(String yesNoCondRespCode) {
        this.yesNoCondRespCode = yesNoCondRespCode;  return this;
    }

    public String getProviderAcceptCode() {
        return providerAcceptCode;
    }

    public ClaimInformation setProviderAcceptCode(String providerAcceptCode) {
        this.providerAcceptCode = providerAcceptCode;  return this;
    }

    public String getYesNoCondRespCode2() {
        return yesNoCondRespCode2;
    }

    public ClaimInformation setYesNoCondRespCode2(String yesNoCondRespCode2) {
        this.yesNoCondRespCode2 = yesNoCondRespCode2;  return this;
    }

    public String getReleaseOfInfoCode() {
        return releaseOfInfoCode;
    }

    public ClaimInformation setReleaseOfInfoCode(String releaseOfInfoCode) {
        this.releaseOfInfoCode = releaseOfInfoCode;  return this;
    }

    public String getPatientSigSourceCode() {
        return patientSigSourceCode;
    }

    public ClaimInformation setPatientSigSourceCode(String patientSigSourceCode) {
        this.patientSigSourceCode = patientSigSourceCode;  return this;
    }

    public String getRelatedCausesInfo() {
        return relatedCausesInfo;
    }

    public ClaimInformation setRelatedCausesInfo(String relatedCausesInfo) {
        this.relatedCausesInfo = relatedCausesInfo;  return this;
    }

    public String getSpecialProgCode() {
        return specialProgCode;
    }

    public ClaimInformation setSpecialProgCode(String specialProgCode) {
        this.specialProgCode = specialProgCode;  return this;
    }

    public String getYesNoCondRespCode3() {
        return yesNoCondRespCode3;
    }

    public ClaimInformation setYesNoCondRespCode3(String yesNoCondRespCode3) {
        this.yesNoCondRespCode3 = yesNoCondRespCode3;  return this;
    }

    public String getLevelOfServiceCode() {
        return levelOfServiceCode;
    }

    public ClaimInformation setLevelOfServiceCode(String levelOfServiceCode) {
        this.levelOfServiceCode = levelOfServiceCode;  return this;
    }

    public String getYesNoCondRespCode4() {
        return yesNoCondRespCode4;
    }

    public ClaimInformation setYesNoCondRespCode4(String yesNoCondRespCode4) {
        this.yesNoCondRespCode4 = yesNoCondRespCode4;  return this;
    }

    public String getProviderAgreeCode() {
        return providerAgreeCode;
    }

    public ClaimInformation setProviderAgreeCode(String providerAgreeCode) {
        this.providerAgreeCode = providerAgreeCode;  return this;
    }

    public String getClaimStatusCode() {
        return claimStatusCode;
    }

    public ClaimInformation setClaimStatusCode(String claimStatusCode) {
        this.claimStatusCode = claimStatusCode;  return this;
    }

    public String getYesNoCondRespCode5() {
        return yesNoCondRespCode5;
    }

    public ClaimInformation setYesNoCondRespCode5(String yesNoCondRespCode5) {
        this.yesNoCondRespCode5 = yesNoCondRespCode5;  return this;
    }

    public String getClaimSubmitReasonCode() {
        return claimSubmitReasonCode;
    }

    public ClaimInformation setClaimSubmitReasonCode(String claimSubmitReasonCode) {
        this.claimSubmitReasonCode = claimSubmitReasonCode;  return this;
    }

    public String getDelayReasonCode() {
        return delayReasonCode;
    }

    public ClaimInformation setDelayReasonCode(String delayReasonCode) {
        this.delayReasonCode = delayReasonCode;  return this;
    }
}