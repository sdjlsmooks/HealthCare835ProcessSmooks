/**
 * This class was generated by Smooks EJC (http://www.smooks.org).
 */
package solutions.health.X12HCCProfessional.X12_837;

import java.io.Serializable;    
import org.milyn.smooks.edi.EDIWritable;    
import org.milyn.javabean.decoders.DoubleDecoder;    
import java.io.Writer;    
import org.milyn.edisax.model.internal.Delimiters;    
import java.io.IOException;    
import java.io.StringWriter;    
import java.util.List;    
import java.util.ArrayList;    
import org.milyn.edisax.util.EDIUtils;    
import org.milyn.edisax.model.internal.DelimiterType;    

public class ProfessionalService implements Serializable, EDIWritable {

    private static final long serialVersionUID = 1L;

    private String compMedProcedID;
    private String monetaryAmount;
    private String unitBasisMeasCode;
    private Double quantity;
    private DoubleDecoder quantityEncoder;
    private String facilityCode;
    private String serviceTypeCode;
    private String compDiagCodePoint;
    private String monetaryAmount1;
    private String yesNoCondRespCode1;
    private String multipleProcCode;
    private String yesNoCondResponseCode2;
    private String yesNoCondResponseCode3;
    private String reviewCode;
    private String natlLocalRevValue;
    private String copayStatusCode;
    private String healthCareShortCode;
    private String referenceIdentifier;
    private String postalCode;
    private String monetaryAmount2;
    private String levelOfCareCode;
    private String providerAgreeCode;

    public ProfessionalService() {
        
        quantityEncoder = new DoubleDecoder();
    }

    public void write(Writer writer, Delimiters delimiters) throws IOException {
        
        Writer nodeWriter = new StringWriter();

        List<String> nodeTokens = new ArrayList<String>();

        if(compMedProcedID != null) {
            nodeWriter.write(delimiters.escape(compMedProcedID.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(unitBasisMeasCode != null) {
            nodeWriter.write(delimiters.escape(unitBasisMeasCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(quantity != null) {
            nodeWriter.write(delimiters.escape(quantityEncoder.encode(quantity)));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(facilityCode != null) {
            nodeWriter.write(delimiters.escape(facilityCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(serviceTypeCode != null) {
            nodeWriter.write(delimiters.escape(serviceTypeCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(compDiagCodePoint != null) {
            nodeWriter.write(delimiters.escape(compDiagCodePoint.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount1 != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount1.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(yesNoCondRespCode1 != null) {
            nodeWriter.write(delimiters.escape(yesNoCondRespCode1.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(multipleProcCode != null) {
            nodeWriter.write(delimiters.escape(multipleProcCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(yesNoCondResponseCode2 != null) {
            nodeWriter.write(delimiters.escape(yesNoCondResponseCode2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(yesNoCondResponseCode3 != null) {
            nodeWriter.write(delimiters.escape(yesNoCondResponseCode3.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(reviewCode != null) {
            nodeWriter.write(delimiters.escape(reviewCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(natlLocalRevValue != null) {
            nodeWriter.write(delimiters.escape(natlLocalRevValue.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(copayStatusCode != null) {
            nodeWriter.write(delimiters.escape(copayStatusCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(healthCareShortCode != null) {
            nodeWriter.write(delimiters.escape(healthCareShortCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(referenceIdentifier != null) {
            nodeWriter.write(delimiters.escape(referenceIdentifier.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(postalCode != null) {
            nodeWriter.write(delimiters.escape(postalCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(monetaryAmount2 != null) {
            nodeWriter.write(delimiters.escape(monetaryAmount2.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(levelOfCareCode != null) {
            nodeWriter.write(delimiters.escape(levelOfCareCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeWriter.write(delimiters.getField());
        if(providerAgreeCode != null) {
            nodeWriter.write(delimiters.escape(providerAgreeCode.toString()));
            nodeTokens.add(nodeWriter.toString());
            ((StringWriter)nodeWriter).getBuffer().setLength(0);
        }
        nodeTokens.add(nodeWriter.toString());
        writer.write(EDIUtils.concatAndTruncate(nodeTokens, DelimiterType.FIELD, delimiters));
        writer.write(delimiters.getSegmentDelimiter());
        writer.flush();
    }

    public String getCompMedProcedID() {
        return compMedProcedID;
    }

    public ProfessionalService setCompMedProcedID(String compMedProcedID) {
        this.compMedProcedID = compMedProcedID;  return this;
    }

    public String getMonetaryAmount() {
        return monetaryAmount;
    }

    public ProfessionalService setMonetaryAmount(String monetaryAmount) {
        this.monetaryAmount = monetaryAmount;  return this;
    }

    public String getUnitBasisMeasCode() {
        return unitBasisMeasCode;
    }

    public ProfessionalService setUnitBasisMeasCode(String unitBasisMeasCode) {
        this.unitBasisMeasCode = unitBasisMeasCode;  return this;
    }

    public Double getQuantity() {
        return quantity;
    }

    public ProfessionalService setQuantity(Double quantity) {
        this.quantity = quantity;  return this;
    }

    public String getFacilityCode() {
        return facilityCode;
    }

    public ProfessionalService setFacilityCode(String facilityCode) {
        this.facilityCode = facilityCode;  return this;
    }

    public String getServiceTypeCode() {
        return serviceTypeCode;
    }

    public ProfessionalService setServiceTypeCode(String serviceTypeCode) {
        this.serviceTypeCode = serviceTypeCode;  return this;
    }

    public String getCompDiagCodePoint() {
        return compDiagCodePoint;
    }

    public ProfessionalService setCompDiagCodePoint(String compDiagCodePoint) {
        this.compDiagCodePoint = compDiagCodePoint;  return this;
    }

    public String getMonetaryAmount1() {
        return monetaryAmount1;
    }

    public ProfessionalService setMonetaryAmount1(String monetaryAmount1) {
        this.monetaryAmount1 = monetaryAmount1;  return this;
    }

    public String getYesNoCondRespCode1() {
        return yesNoCondRespCode1;
    }

    public ProfessionalService setYesNoCondRespCode1(String yesNoCondRespCode1) {
        this.yesNoCondRespCode1 = yesNoCondRespCode1;  return this;
    }

    public String getMultipleProcCode() {
        return multipleProcCode;
    }

    public ProfessionalService setMultipleProcCode(String multipleProcCode) {
        this.multipleProcCode = multipleProcCode;  return this;
    }

    public String getYesNoCondResponseCode2() {
        return yesNoCondResponseCode2;
    }

    public ProfessionalService setYesNoCondResponseCode2(String yesNoCondResponseCode2) {
        this.yesNoCondResponseCode2 = yesNoCondResponseCode2;  return this;
    }

    public String getYesNoCondResponseCode3() {
        return yesNoCondResponseCode3;
    }

    public ProfessionalService setYesNoCondResponseCode3(String yesNoCondResponseCode3) {
        this.yesNoCondResponseCode3 = yesNoCondResponseCode3;  return this;
    }

    public String getReviewCode() {
        return reviewCode;
    }

    public ProfessionalService setReviewCode(String reviewCode) {
        this.reviewCode = reviewCode;  return this;
    }

    public String getNatlLocalRevValue() {
        return natlLocalRevValue;
    }

    public ProfessionalService setNatlLocalRevValue(String natlLocalRevValue) {
        this.natlLocalRevValue = natlLocalRevValue;  return this;
    }

    public String getCopayStatusCode() {
        return copayStatusCode;
    }

    public ProfessionalService setCopayStatusCode(String copayStatusCode) {
        this.copayStatusCode = copayStatusCode;  return this;
    }

    public String getHealthCareShortCode() {
        return healthCareShortCode;
    }

    public ProfessionalService setHealthCareShortCode(String healthCareShortCode) {
        this.healthCareShortCode = healthCareShortCode;  return this;
    }

    public String getReferenceIdentifier() {
        return referenceIdentifier;
    }

    public ProfessionalService setReferenceIdentifier(String referenceIdentifier) {
        this.referenceIdentifier = referenceIdentifier;  return this;
    }

    public String getPostalCode() {
        return postalCode;
    }

    public ProfessionalService setPostalCode(String postalCode) {
        this.postalCode = postalCode;  return this;
    }

    public String getMonetaryAmount2() {
        return monetaryAmount2;
    }

    public ProfessionalService setMonetaryAmount2(String monetaryAmount2) {
        this.monetaryAmount2 = monetaryAmount2;  return this;
    }

    public String getLevelOfCareCode() {
        return levelOfCareCode;
    }

    public ProfessionalService setLevelOfCareCode(String levelOfCareCode) {
        this.levelOfCareCode = levelOfCareCode;  return this;
    }

    public String getProviderAgreeCode() {
        return providerAgreeCode;
    }

    public ProfessionalService setProviderAgreeCode(String providerAgreeCode) {
        this.providerAgreeCode = providerAgreeCode;  return this;
    }
}